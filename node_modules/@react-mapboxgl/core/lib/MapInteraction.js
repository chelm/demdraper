'use strict';

exports.__esModule = true;

var _each2 = require('lodash/each');

var _each3 = _interopRequireDefault(_each2);

var _keys2 = require('lodash/keys');

var _keys3 = _interopRequireDefault(_keys2);

var _defaults2 = require('lodash/defaults');

var _defaults3 = _interopRequireDefault(_defaults2);

var _pick2 = require('lodash/pick');

var _pick3 = _interopRequireDefault(_pick2);

var _class, _temp;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var MapInteraction = (_temp = _class = function (_React$PureComponent) {
  _inherits(MapInteraction, _React$PureComponent);

  function MapInteraction() {
    _classCallCheck(this, MapInteraction);

    return _possibleConstructorReturn(this, _React$PureComponent.apply(this, arguments));
  }

  // Called when the map is initally created.
  MapInteraction.getOptions = function getOptions(props) {
    return (0, _pick3.default)((0, _defaults3.default)({}, props, MapInteraction.defaultProps), (0, _keys3.default)(MapInteraction.propTypes));
  };

  MapInteraction.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
    var _this2 = this;

    var map = this.context.map;

    var handlers = ['scrollZoom', 'boxZoom', 'dragRotate', 'dragPan', 'keyboard', 'doubleClickZoom', 'touchZoomRotate'];
    (0, _each3.default)(handlers, function (handler) {
      if (_this2.props[handler] !== nextProps[handler]) {
        if (nextProps[handler]) {
          map[handler].enable();
        } else {
          map[handler].disable();
        }
      }
    });
  };

  MapInteraction.prototype.render = function render() {
    return null;
  };

  return MapInteraction;
}(_react2.default.PureComponent), _class.propTypes = {
  interactive: _propTypes2.default.bool,
  scrollZoom: _propTypes2.default.bool,
  boxZoom: _propTypes2.default.bool,
  dragRotate: _propTypes2.default.bool,
  dragPan: _propTypes2.default.bool,
  keyboard: _propTypes2.default.bool,
  doubleClickZoom: _propTypes2.default.bool,
  touchZoomRotate: _propTypes2.default.bool
}, _class.defaultProps = {
  interactive: true,
  scrollZoom: true,
  boxZoom: true,
  dragRotate: true,
  dragPan: true,
  keyboard: true,
  doubleClickZoom: true,
  touchZoomRotate: true
}, _class.contextTypes = {
  map: _propTypes2.default.object
}, _temp);
exports.default = MapInteraction;