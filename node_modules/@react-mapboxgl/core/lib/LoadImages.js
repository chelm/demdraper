'use strict';

exports.__esModule = true;

var _fromPairs2 = require('lodash/fromPairs');

var _fromPairs3 = _interopRequireDefault(_fromPairs2);

var _map2 = require('lodash/map');

var _map3 = _interopRequireDefault(_map2);

var _isEqual2 = require('lodash/isEqual');

var _isEqual3 = _interopRequireDefault(_isEqual2);

var _omit2 = require('lodash/omit');

var _omit3 = _interopRequireDefault(_omit2);

var _class, _temp;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _2 = require('./');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var LoadImages = (_temp = _class = function (_React$PureComponent) {
  _inherits(LoadImages, _React$PureComponent);

  function LoadImages() {
    _classCallCheck(this, LoadImages);

    var _this = _possibleConstructorReturn(this, _React$PureComponent.call(this));

    _this.state = {
      loaded: false,
      images: {}
    };

    _this.loadImage = _this.loadImage.bind(_this);
    return _this;
  }

  LoadImages.prototype.componentDidMount = function componentDidMount() {
    this.mounted = true;
    this.loadImages((0, _omit3.default)(this.props, 'children'));
  };

  LoadImages.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
    if (!(0, _isEqual3.default)((0, _omit3.default)(this.props, 'children'), (0, _omit3.default)(nextProps, 'children'))) {
      this.loadImages((0, _omit3.default)(this.props, 'children'));
    }
  };

  LoadImages.prototype.componentWillUnmount = function componentWillUnmount() {
    this.mounted = false;
  };

  LoadImages.prototype.loadImages = function loadImages(images) {
    var _this2 = this;

    this.setState({ loaded: false });
    Promise.all((0, _map3.default)(images, this.loadImage)).then(function (results) {
      if (_this2.mounted) {
        _this2.setState({
          loaded: true,
          images: (0, _fromPairs3.default)(results)
        });
      }
    });
  };

  LoadImages.prototype.loadImage = function loadImage(src, name) {
    var map = this.context.map;

    return new Promise(function (resolve, reject) {
      map.loadImage(src, function (err, image) {
        if (err) return reject(err);
        resolve([name, image]);
      });
    });
  };

  LoadImages.prototype.render = function render() {
    return _react2.default.createElement(
      _2.Children,
      null,
      (0, _map3.default)(this.state.images, function (image, name) {
        return _react2.default.createElement(_2.Image, { key: name, name: name, image: image });
      }),
      this.state.loaded ? this.props.children : null
    );
  };

  return LoadImages;
}(_react2.default.PureComponent), _class.propTypes = {
  children: _react2.default.PropTypes.node
}, _class.contextTypes = {
  map: _propTypes2.default.object
}, _temp);
exports.default = LoadImages;