import _map from 'lodash/map';

var _class, _temp;

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

import React from 'react';
import PropTypes from 'prop-types';

import Children from './Children';
import MapEvent from './MapEvent';

var MapEvents = (_temp = _class = function (_React$PureComponent) {
  _inherits(MapEvents, _React$PureComponent);

  function MapEvents() {
    _classCallCheck(this, MapEvents);

    return _possibleConstructorReturn(this, _React$PureComponent.apply(this, arguments));
  }

  MapEvents.prototype.render = function render() {
    var _this2 = this;

    return React.createElement(
      Children,
      null,
      _map(MapEvents.propTypes, function (_, type) {
        return _this2.props[type] ? React.createElement(MapEvent, {
          key: type,
          type: type.slice(2).toLowerCase(),
          onChange: _this2.props[type]
        }) : null;
      })
    );
  };

  return MapEvents;
}(React.PureComponent), _class.propTypes = {
  onResize: PropTypes.func,
  onDblClick: PropTypes.func,
  onClick: PropTypes.func,
  onMouseMove: PropTypes.func,
  onMoveStart: PropTypes.func,
  onMove: PropTypes.func,
  onMoveEnd: PropTypes.func,
  onMouseOut: PropTypes.func,
  onMouseDown: PropTypes.func,
  onMouseUp: PropTypes.func,
  onDragStart: PropTypes.func,
  onDrag: PropTypes.func,
  onDragEnd: PropTypes.func,
  onTouchMove: PropTypes.func,
  onTouchStart: PropTypes.func,
  onTouchEnd: PropTypes.func,
  onTouchCancel: PropTypes.func,
  onZoomStart: PropTypes.func,
  onZoom: PropTypes.func,
  onZoomEnd: PropTypes.func,
  onBoxZoomStart: PropTypes.func,
  onBoxZoomEnd: PropTypes.func,
  onBoxZoomCancel: PropTypes.func,
  onRotateStart: PropTypes.func,
  onRotate: PropTypes.func,
  onRotateEnd: PropTypes.func,
  onPitchStart: PropTypes.func,
  onPitch: PropTypes.func,
  onPitchEnd: PropTypes.func,
  onWebGLContextLost: PropTypes.func,
  onWebGLContextRestored: PropTypes.func,
  onRemove: PropTypes.func,
  onStyleData: PropTypes.func,
  onSourceData: PropTypes.func,
  onSourceDataLoading: PropTypes.func,
  onData: PropTypes.func,
  onDataLoading: PropTypes.func,
  onRender: PropTypes.func,
  onContextMenu: PropTypes.func,
  onStyleDataLoading: PropTypes.func,
  onError: PropTypes.func
}, _class.contextTypes = {
  map: PropTypes.object
}, _temp);


export default MapEvents;